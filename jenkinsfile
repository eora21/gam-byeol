pipeline {
	agent none
	options { skipDefaultCheckout(false) }
	stages {
		stage('git pull') {
			agent any
			steps {
				checkout scm
			}
		}
		stage('Docker build') {
			agent any
			steps {
				sh 'docker build -t front_end:latest /var/jenkins_home/workspace/star_pipeline/front_end'
				sh 'docker build -t back_end:latest /var/jenkins_home/workspace/star_pipeline/back_end'

			}
		}
		stage('Docker run') {
			agent any
			steps {
				sh 'docker ps -f name=front_end -q \
        | xargs --no-run-if-empty docker container stop'
				sh 'docker ps -f name=back_end -q \
		| xargs --no-run-if-empty docker container stop'
				sh 'docker container ls -a -f name=front_end -q \
        | xargs -r docker container rm'
				sh 'docker container ls -a -f name=back_end -q \
		| xargs -r docker container rm'
				sh 'docker images -f dangling=true && \ 		
				docker rmi $(docker images -f dangling=true -q)'

				sh 'docker run -d --name front_end \
				-p 80:80 \
				-p 443:443 \
				-v /home/ubuntu/sslkey/:/var/jenkins_home/workspace/star_pipeline/sslkey/ \
				-v /etc/localtime:/etc/localtime:ro \
				--network jenkinsnetwork \
				frontend:latest'

				sh 'docker run -d --name back_end \
		--network jenkinsnetwork back_end:latest'
			}
		}
	}
}
